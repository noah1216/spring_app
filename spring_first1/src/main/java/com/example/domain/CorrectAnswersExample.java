package com.example.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CorrectAnswersExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public CorrectAnswersExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdIsNull() {
			addCriterion("questions_id is null");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdIsNotNull() {
			addCriterion("questions_id is not null");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdEqualTo(Integer value) {
			addCriterion("questions_id =", value, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdNotEqualTo(Integer value) {
			addCriterion("questions_id <>", value, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdGreaterThan(Integer value) {
			addCriterion("questions_id >", value, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("questions_id >=", value, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdLessThan(Integer value) {
			addCriterion("questions_id <", value, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdLessThanOrEqualTo(Integer value) {
			addCriterion("questions_id <=", value, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdIn(List<Integer> values) {
			addCriterion("questions_id in", values, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdNotIn(List<Integer> values) {
			addCriterion("questions_id not in", values, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdBetween(Integer value1, Integer value2) {
			addCriterion("questions_id between", value1, value2, "questionsId");
			return (Criteria) this;
		}

		public Criteria andQuestionsIdNotBetween(Integer value1, Integer value2) {
			addCriterion("questions_id not between", value1, value2, "questionsId");
			return (Criteria) this;
		}

		public Criteria andAnswerIsNull() {
			addCriterion("answer is null");
			return (Criteria) this;
		}

		public Criteria andAnswerIsNotNull() {
			addCriterion("answer is not null");
			return (Criteria) this;
		}

		public Criteria andAnswerEqualTo(String value) {
			addCriterion("answer =", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerNotEqualTo(String value) {
			addCriterion("answer <>", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerGreaterThan(String value) {
			addCriterion("answer >", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerGreaterThanOrEqualTo(String value) {
			addCriterion("answer >=", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerLessThan(String value) {
			addCriterion("answer <", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerLessThanOrEqualTo(String value) {
			addCriterion("answer <=", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerLike(String value) {
			addCriterion("answer like", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerNotLike(String value) {
			addCriterion("answer not like", value, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerIn(List<String> values) {
			addCriterion("answer in", values, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerNotIn(List<String> values) {
			addCriterion("answer not in", values, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerBetween(String value1, String value2) {
			addCriterion("answer between", value1, value2, "answer");
			return (Criteria) this;
		}

		public Criteria andAnswerNotBetween(String value1, String value2) {
			addCriterion("answer not between", value1, value2, "answer");
			return (Criteria) this;
		}

		public Criteria andCreatedAtIsNull() {
			addCriterion("created_at is null");
			return (Criteria) this;
		}

		public Criteria andCreatedAtIsNotNull() {
			addCriterion("created_at is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedAtEqualTo(Date value) {
			addCriterion("created_at =", value, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtNotEqualTo(Date value) {
			addCriterion("created_at <>", value, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtGreaterThan(Date value) {
			addCriterion("created_at >", value, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
			addCriterion("created_at >=", value, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtLessThan(Date value) {
			addCriterion("created_at <", value, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
			addCriterion("created_at <=", value, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtIn(List<Date> values) {
			addCriterion("created_at in", values, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtNotIn(List<Date> values) {
			addCriterion("created_at not in", values, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtBetween(Date value1, Date value2) {
			addCriterion("created_at between", value1, value2, "createdAt");
			return (Criteria) this;
		}

		public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
			addCriterion("created_at not between", value1, value2, "createdAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtIsNull() {
			addCriterion("updated_at is null");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtIsNotNull() {
			addCriterion("updated_at is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtEqualTo(Date value) {
			addCriterion("updated_at =", value, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtNotEqualTo(Date value) {
			addCriterion("updated_at <>", value, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtGreaterThan(Date value) {
			addCriterion("updated_at >", value, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
			addCriterion("updated_at >=", value, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtLessThan(Date value) {
			addCriterion("updated_at <", value, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
			addCriterion("updated_at <=", value, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtIn(List<Date> values) {
			addCriterion("updated_at in", values, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtNotIn(List<Date> values) {
			addCriterion("updated_at not in", values, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtBetween(Date value1, Date value2) {
			addCriterion("updated_at between", value1, value2, "updatedAt");
			return (Criteria) this;
		}

		public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
			addCriterion("updated_at not between", value1, value2, "updatedAt");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table correct_answers
	 * @mbg.generated  Mon Apr 26 16:23:14 JST 2021
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table correct_answers
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 26 16:23:14 JST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}